<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wddsite.github.io</id>
    <title>WddSite</title>
    <updated>2021-03-24T14:11:40.366Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wddsite.github.io"/>
    <link rel="self" href="https://wddsite.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://wddsite.github.io/images/avatar.png</logo>
    <icon>https://wddsite.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, WddSite</rights>
    <entry>
        <title type="html"><![CDATA[使用kubeadm快速部署一个K8s集群]]></title>
        <id>https://wddsite.github.io/post/0LZKyx1JF/</id>
        <link href="https://wddsite.github.io/post/0LZKyx1JF/">
        </link>
        <updated>2021-03-24T13:45:46.000Z</updated>
        <content type="html"><![CDATA[<p>kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。</p>
<p>这个工具能通过两条指令完成一个kubernetes集群的部署：</p>
<pre><code class="language-shell"># 创建一个 Master 节点
$ kubeadm init

# 将一个 Node 节点加入到当前集群中
$ kubeadm join &lt;Master节点的IP和端口 &gt;
</code></pre>
<h2 id="1-安装要求">1. 安装要求</h2>
<p>在开始之前，部署Kubernetes集群机器需要满足以下几个条件：</p>
<ul>
<li>一台或多台机器，操作系统 CentOS7.x-86_x64</li>
<li>硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多</li>
<li>可以访问外网，需要拉取镜像，如果服务器不能上网，需要提前下载镜像并导入节点</li>
<li>禁止swap分区</li>
</ul>
<h2 id="2-准备环境">2. 准备环境</h2>
<table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>master</td>
<td>192.168.1.11</td>
</tr>
<tr>
<td>node1</td>
<td>192.168.1.12</td>
</tr>
<tr>
<td>node2</td>
<td>192.168.1.13</td>
</tr>
</tbody>
</table>
<pre><code class="language-shell"># 关闭防火墙
systemctl stop firewalld
systemctl disable firewalld

# 关闭selinux
sed -i 's/enforcing/disabled/' /etc/selinux/config  # 永久
setenforce 0  # 临时

# 关闭swap
swapoff -a  # 临时
sed -ri 's/.*swap.*/#&amp;/' /etc/fstab    # 永久

# 根据规划设置主机名
hostnamectl set-hostname &lt;hostname&gt;

# 在master添加hosts
cat &gt;&gt; /etc/hosts &lt;&lt; EOF
192.168.119.201 k8smaster
192.168.119.202 k8snode1
192.168.44.144 k8snode2
EOF

# 将桥接的IPv4流量传递到iptables的链
cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system  # 生效

# 时间同步
yum install ntpdate -y
    ntpdate time.windows.com
</code></pre>
<h2 id="3-所有节点安装dockerkubeadmkubelet">3. 所有节点安装Docker/kubeadm/kubelet</h2>
<p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p>
<h3 id="31-安装docker">3.1 安装Docker</h3>
<pre><code class="language-shell">$ wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo
$ yum -y install docker-ce-18.06.1.ce-3.el7
$ systemctl enable docker &amp;&amp; systemctl start docker
$ docker --version
Docker version 18.06.1-ce, build e68fc7a
</code></pre>
<pre><code class="language-shell">$ cat &gt; /etc/docker/daemon.json &lt;&lt; EOF
{
  &quot;registry-mirrors&quot;: [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;]
}
EOF
</code></pre>
<h3 id="32-添加阿里云yum软件源">3.2 添加阿里云YUM软件源</h3>
<pre><code class="language-shell">$ cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF
</code></pre>
<h3 id="33-安装kubeadmkubelet和kubectl">3.3 安装kubeadm，kubelet和kubectl</h3>
<p>由于版本更新频繁，这里指定版本号部署：</p>
<pre><code class="language-shell">$ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0
$ systemctl enable kubelet
</code></pre>
<h2 id="4-部署kubernetes-master">4. 部署Kubernetes Master</h2>
<p>在192.168.31.61（Master）执行。</p>
<pre><code class="language-shell">$ kubeadm init \
  --apiserver-advertise-address=192.168.119.201 \
  --image-repository registry.aliyuncs.com/google_containers \
  --kubernetes-version v1.18.0 \
  --service-cidr=10.96.0.0/12 \
  --pod-network-cidr=10.244.0.0/16
</code></pre>
<p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址。</p>
<p>使用kubectl工具：</p>
<pre><code class="language-bash">mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
$ kubectl get nodes
</code></pre>
<h2 id="5-加入kubernetes-node">5. 加入Kubernetes Node</h2>
<p>在192.168.1.12/13（Node）执行。</p>
<p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：</p>
<pre><code class="language-shell">$ kubeadm join 192.168.1.11:6443 --token esce21.q6hetwm8si29qxwn \
    --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5
</code></pre>
<p>默认token有效期为24小时，当过期之后，该token就不可用了。这时就需要重新创建token，操作如下：</p>
<pre><code class="language-shell">kubeadm token create --print-join-command
</code></pre>
<h2 id="6-部署cni网络插件">6. 部署CNI网络插件</h2>
<pre><code class="language-shell">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
</code></pre>
<p>默认镜像地址无法访问，sed命令修改为docker hub镜像仓库。</p>
<pre><code class="language-shell">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl get pods -n kube-system
NAME                          READY   STATUS    RESTARTS   AGE
kube-flannel-ds-amd64-2pc95   1/1     Running   0          72s
</code></pre>
<h2 id="7-测试kubernetes集群">7. 测试kubernetes集群</h2>
<p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p>
<pre><code class="language-shell">$ kubectl create deployment nginx --image=nginx
$ kubectl expose deployment nginx --port=80 --type=NodePort
$ kubectl get pod,svc
</code></pre>
<p>访问地址：http://NodeIP:Port</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://wddsite.github.io/post/hello-gridea/</id>
        <link href="https://wddsite.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>